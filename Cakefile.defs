/*
 *			C A K E F I L E . D E F S
 *
 *  Main include file for compiling the BRL CAD Package with the CAKE program.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
 *  $Header: /usr/Backup/upgrade/brlcad/brlcad/Cakefile.defs,v 1.10 1988-09-24 01:41:24 mike Exp $
 *
 *  For those unfamiliar with CAKE, one important hint:
 *  When a rule includes an ampersand ('&') before the colon,
 *  this signals a pattern that does not result in a file being
 *  created.  If the ampersand is absent, CAKE checks to make sure
 *  that the target (file) was created.
 *
 *  Note that CAKE ordinarily runs shell commands through CSH,
 *  but these Cakefiles insist on using the Bourne Shell instead,
 *  so an override is enforced, below, with the "set" command.
 *
 *  WARNING:  Do NOT add comments after defining a parameter,
 *  instead, place all comments on a line by themselves!
 *  While the comment itself is removed, the trailing tabs
 *  will remain.  Having unexpected white space at the end of
 *  most definitions will generally ruin the expansion, later.
 *
 *  WARNING:  For proper operation on the SGI 3-D machines,
 *  all comments must start in the first column, or CPP will
 *  leave the leading tabs in place, and confuse Cake.
 */
set -S1 "/bin/sh -c"
set -S2 "/bin/sh"

/* Program to run to obtain the "sub" substitution effect */
#define SUB	cakesub

/****************************************************************
 *								*
 *  Manifest constants.  Do not change these.			*
 *								*
 *  Note that because the C preprocessor does not implement	*
 *  string comparisons, manifest constants must be given	*
 *  numbers.  Shades of FORTRAN.				*
 *								*
 ****************************************************************/
#define BSD	42
#define SYSV	5

/****************************************************************
 *								*
 * If the symbol NFS is not defined, then the normal		*
 * single-machine behavior is implemented.			*
 * In this mode, the object modules are placed into the		*
 * same directory as the source code.				*
 *								*
 * If the symbol NFS is defined, then the NFS-based		*
 * multi-machine behavior is implemented.			*
 * In this mode, a separate directory is made for each		*
 * source directory for each type of client machine.		*
 * This way, the binaries for each type of client machine	*
 * can not co-mingle, yet everything is generated from		*
 * a common set of source code.					*
 * This is the strategy used to handle the machines at BRL.	*
 * For example, the sources in cad/librt/ would have		*
 * sun3 binaries in cad/.librt.sun3/ and			*
 * SGI 4-D binaries in cad/.librt.4d/				*
 * This requires slightly more care to be certain that you	*
 * are in the right directory before running "cake", but	*
 * being able to share one set of sources across many		*
 * different kinds of machines makes this well worthwhile.	*
 * If you only have one kind of machine, don't bother.		*
 *								*
 ****************************************************************/
#undef NFS
#define NFS	1	/* BRL */

/****************************************************************
 *								*
 *  BEGIN System-specific definitions				*
 *								*
 *  Note a moderately ugly problem:  the desired value for	*
 *  symbol MTYPE is often the same symbol built into CPP	*
 *  to indicate the type of machine.  Therefore, in order to	*
 *  keep the MTYPE string from being converted to		*
 *  the string "1", the machine type symbol (eg, "vax")		*
 *  must be #undef'ed.						*
 *								*
 *  Critical Definitions.  These symbols MUST be defined,	*
 *  and are not defaulted:					*
 *	MTYPE							*
 *	UNIXTYPE						*
 *	HAS_TCP							*
 *	LIBRT_TIMER						*
 *								*
 *  Optional Definitions.  If not defined, defaults are used.	*
 *  Some pertain to BRL-CAD software options,			*
 *  and some pertain to system-specific compiler options	*
 *	CC_DEFS							*
 *	CC_OPTS							*
 *	LD_OPTS							*
 *	LIBFB_CONFIG						*
 *	LIBFB_OBJS						*
 *	LIBFB_SETUP		(default=undefined)		*
 *	MGED_CONFIG		(default=undefined)		*
 *	MGED_OBJS		(default=undefined)		*
 *	MGED_LIBES		(default=undefined)		*
 *	RT_CONFIG						*
 *	RT_LIBES						*
 *	LGT_CONFIG						*
 *	RFBD_CONFIG						*
 *	CC							*
 *	FC							*
 *	GETHOST							*
 *	RANLIB							*
 *	BINDIR, LIBDIR, ETCDIR, INCLUDE_DIR			*
 *	ARCH_SUF						*
 *	MANDIR							*
 *	OPTIMIZER						*
 *	PROFILER						*
 *								*
 ****************************************************************/

#ifdef vax
/*	DEC VAX-11 systems */
#	undef	vax
#	define	MTYPE	vax
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
/*	On Ultrix & 4.1 systems, #define	CC_DEFS	-Dvoid=int */
#	define	LIBFB_OBJS	if_remote pkg if_ptty if_adage
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY -DIF_ADAGE
/*	At USNA, add -DGM256 to LIBFB_CONFIG */
#	define	LIBRT_TIMER	timer42
#	define	MGED_OBJS	dm-mg dm-vg
#	define	MGED_CONFIG	-DDM_MG -DDM_VG
#	define	MGED_LIBES	/**/
#endif

#ifdef alliant
/*	Alliant FX/8.  Compile all programs for the CEs */
#	undef	fx
#	undef	alliant
#	define	MTYPE	fx
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
#	if 1
/*		Standard Alliant C Compiler */
#		define	CC_OPTS	-ce
#	else
/*		FX/C, -l option puts listing on stdout. */
#		define	CC	/usr/local/fxc2.0.16/fxc
#		define	CC_OPTS	-ce -DVECTORIZE
#		define	OPTIMIZER -Ogiv
#	endif
#	define	LD_OPTS	CC_OPTS
#	define	FC	/usr/alliant/fortran
#	define	LIBMALLOC	/* use vendor library */
#	define	RT_LIBES	-lcvec
#	define	LIBRT_TIMER	timer42
#endif

#ifdef gould
/*	Gould SEL, PowerNode.  Obtain more stack space with -m */
#	undef	sel
#	define	MTYPE	sel
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
#	define	LD_OPTS	-m 8
#	if 1
/*		Normal Configuration */
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY
#		define	LIBFB_OBJS	if_remote pkg if_ptty
#	else
/*		X-Windows Configuration */
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY -DIF_X -I/d/phil/X11
#		define	LIBFB_OBJS	if_remote pkg if_ptty if_X
#		define	LIBFB_SETUP	(rm -f PRODUCTS; \
			cp /usr/local/lib/libX11.a PRODUCTS )
#	endif
#	define	LIBRT_TIMER	timer42
#endif

#if defined(sgi) && !defined(mips)
/*	Silicon Graphics 3D */
#	undef	sgi
#	define	MTYPE	3d
#	define	UNIXTYPE	SYSV
#	define	HAS_TCP	1
/*	set CC_OPTS= -Zf only if Weitek FP chip installed */
#	define	CC_OPTS	-Zf
#	define	LD_OPTS	CC_OPTS
#	define	FC	/bin/f77
#	define	RANLIB	ranlib
#	define	MGED_OBJS	dm-ir
#	define	MGED_CONFIG	-DDM_IR
/*		mged_config:  append -DMC68010 for non-turbo 2400 */
/*		mged_config:  append -DNOBLOCK for XNS kernels */
#	ifdef	Version3_4
#		define	LIBPKG_CONFIG	-I/usr/include/EXOS -DSGI_EXCELAN
#		define	LIBPKG_SETUP	cp /usr/lib/libsocket.a PRODUCTS
#		define	LIBFB_OBJS	if_remote pkg sgiselect.o if_sgi
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libsocket.a; \
			AR uv ../libfb.a *; \
			rm -f *; \
			AR x /usr/lib/libgl2.a; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	RFBD_CONFIG	-I/usr/include/EXOS -DSGI_EXCELAN
#		define	MGED_LIBES	../libfb/sgiselect.o -lgl2
#	else
/*		Versions 3.5 and 3.6 */
#		define	LIBPKG_CONFIG	-I/usr/include/bsd -DBSD
#		define	LIBPKG_SETUP	cp /usr/lib/libbsd.a PRODUCTS
#		define	LIBFB_OBJS	if_remote pkg if_sgi
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libdbm.a; \
			AR x /usr/lib/libgl2.a; \
			rm -f select.o; \
			AR x /usr/lib/libbsd.a; \
			rm -f __.SYMDEF; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	RFBD_CONFIG	-I/usr/include/bsd -DBSD
#		define	MGED_LIBES	-lbsd -lgl2
#	endif
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SGI
#	define	LIBRT_TIMER	timerunix
#endif

#if defined(sgi) && defined(mips)
/*	Silicon Graphics 4D, which uses the MIPS chip */
/*	Here are the values of SGI_TYPE, set by "setup.sh":
 *		1)  [4gt] 4D-GT hw on SGI sw Release 3.1
 *		2)  [4d] non-GT hw on SGI sw Release 3.1
 *		3)  [4d] non-GT hw on SGI sw Release 2
 */
#	undef	sgi
#	define	GFLAG		-G 16

/* SGI_4D_TYPE_MARKER: don't alter this comment, setup.sh needs it when changing next line */
#	define	SGI_TYPE	3


#	if SGI_TYPE == 1
/******		Graphics Turbo is installed */
#		define	MTYPE	4gt
#		define  CC_OPTS		GFLAG -DSGI4D_GT
#		define	RT_LIBES	-lmpc
#		define	MGED_LIBES	-lbsd -lgl_s
#		define	LGT_CONFIG	GFLAG -lmpc
#		define	LIBMALLOC	/* needs malloc() from -lmpc */
#		define	LIBFB_OBJS	if_remote pkg if_gt
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_GT
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libgl_s.a; \
			mv in_addr.o sgi_addr.o;\
			rm -f select.o *EBEB*; \
			AR x /usr/lib/libbsd.a; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#	endif
#	if SGI_TYPE == 2
/******		No Graphics Turbo, but has NeWS, SGI sw Release 3 */
#		define	MTYPE	4d
#		define  CC_OPTS		GFLAG
#		define	RT_LIBES	-lmpc
#		define	MGED_LIBES	-lgl_s
#		define	LGT_CONFIG	GFLAG -lmpc
#		define	LIBMALLOC	/* need parallel malloc() */
#		define	LIBFB_OBJS	if_remote pkg if_4d
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_4D
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libgl.a; \
			mv in_addr.o sgi_addr.o;\
			rm -f select.o *EBEB*; \
			AR x /usr/lib/libbsd.a; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#	endif
#	if SGI_TYPE == 3
/******		No Graphics Turbo, no News, SGI sw Release 2 */
#		define	MTYPE	4d2
#		define  CC_OPTS		GFLAG -DSGI4D_Rel2
#		define	MGED_LIBES	-lbsd -lgl
#		define	LGT_CONFIG	GFLAG
#		define	LIBFB_OBJS	if_remote pkg if_4d
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_4D
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libgl.a; \
			rm -f select.o *EBEB*; \
			AR x /usr/lib/libbsd.a; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#	endif
#	define	UNIXTYPE	SYSV
#	define	HAS_TCP	1
#	define	CC	/usr/bin/cc
#	define	LD_OPTS		GFLAG
#	define	OPTIMIZER	-O2
#	define	RANLIB	ar ts
#	define	GETHOST	hostname
#	define	LIBPKG_CONFIG	-I/usr/include/bsd -DBSD
#	define	RFBD_CONFIG	-I/usr/include/bsd -DBSD
#	define	LIBRT_TIMER	timerunix
#	define	RT_CONFIG	GFLAG
#	define	MGED_OBJS	dm-4d
#	define	MGED_CONFIG	GFLAG -DIR_KNOBS=8 -DIR_BUTTONS=32 -DDM_4D
#endif

#if defined(sun) && !defined(sparc)
#	undef	sun
#	undef	sun3
#	define	MTYPE	sun3
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
/*	Select correct floating point flag, -fswitch if unsure */
/*#	define	CC_OPTS	-fswitch*/
/*#	define	CC_OPTS	-ffpa */
#	define	CC_OPTS	-f68881
#	define	LD_OPTS	CC_OPTS
#	define	LIBMALLOC	/* must use libc.a, for _malloc_at_addr() */
#	define	LIBRT_TIMER	timer42
#if 0
/*		Normal Sun configuration */
#		define	LIBFB_OBJS	if_remote pkg if_sun
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SUN
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libsuntool.a; \
			AR x /usr/lib/libsunwindow.a; \
			AR x /usr/lib/libpixrect.a; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	MGED_OBJS	dm-sun
#		define	MGED_CONFIG	-DDM_SUNPW
#		define	MGED_LIBES	-lsuntool -lsunwindow -lpixrect
#else
/*		Sun with X11 configuration */
#		define	LIBFB_OBJS	if_remote pkg if_sun if_X
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SUN -DIF_X
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libsuntool.a; \
			AR x /usr/lib/libsunwindow.a; \
			AR x /usr/lib/libpixrect.a; \
			AR x /usr/brl/lib/libX.a; \
			rm -f __.SYMDEF; \
			AR u ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	MGED_OBJS	dm-sun dm-X
#		define	MGED_CONFIG	-DDM_SUNPW -DDM_X
#		define	MGED_LIBES	-lsuntool -lsunwindow -lpixrect \
			/usr/brl/lib/libX11.a
#	endif
#endif

#if defined(sparc)
#	undef	sun
#	undef	sun4
#	define	MTYPE	sun4
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
#	define	OPTIMIZER	-O2
#	define	LIBMALLOC	/* use vendor library */
#	define	LIBFB_OBJS	if_remote pkg if_sun
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SUN
#	define	LIBFB_SETUP	(rm -fr /usr/tmp/libfb; \
		mkdir /usr/tmp/libfb; \
		( cd /usr/tmp/libfb; \
		cp /usr/lib/libsuntool.a libfb.a; \
		AR x /usr/lib/libsunwindow.a; \
		AR x /usr/lib/libpixrect.a; \
		AR u libfb.a * ); \
		mv /usr/tmp/libfb/libfb.a . ; \
		rm -fr /usr/tmp/libfb )
#	define	LIBRT_TIMER	timer42
#	define	MGED_OBJS	dm-sun
#	define	MGED_CONFIG
#	define	MGED_LIBES
#endif
/*	Cray X-M/P running UNICOS.  Define CRAY_COS for use on COS. */
#if defined(CRAY1)
/*	Cray X-M/P running UNICOS 3.  Define CRAY_COS for use on COS. */
#	undef	xmp
#	define	UNIXTYPE	SYSV
#	undef	cray
#	define	HAS_TCP	1
/*	-g -hnobtreg for debugging */
#	if 1
#		define	CC_DEFS -hvector,olevel_3
#		define	CC_DEFS -hvector,olevel_3,vmesg_2 -DVECTORIZE
/*		Cray C 4.0 (experimental) */
#		define	CC_DEFS -hvector,olevel_3,vmesg_2
#		define	CC	/bin/ncc
#	define	LIBPKG_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT
#	define	RFBD_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT
#	define	LIBRT_TIMER	timercray
#	define	RFBD_LIBES	-lbsd
#	define	LIBRT_TIMER	timerunix
#	define	RT_LIBES	-L/lib/multi -lu
/*	 On XMP UNICOS 3.0, archives still end in .o */
#	define	ARCH_SUF	o
#	define	AR	../cray-ar.sh
#	define	FC	/bin/cft77
#	endif
#	define	RANLIB	echo
#	define	LIBPKG_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
#	define	LIBFB_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
#endif
#if defined(CRAY2)
/*	Cray-2 running UNICOS 4 */
#	undef	cr2
#	define	UNIXTYPE	SYSV
#	undef	cray
#	define	MTYPE	cr2
#		define	CC_DEFS -hvector,olevel_3
#		define	CC	/bin/scc
/*		Cray C 4.0 (experimental) */
#		define	CC_DEFS -hvector,olevel_3,vmesg_2 -DVECTORIZE
#		define	CC	/bin/ncc
#			define	CC	/bin/ncc
#	define	FC	/bin/cft77
		AR x /usr/lib/libnet.a select.o socket.o; \
#	define	LIBPKG_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT
#	define	RFBD_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT
#		define	RFBD_CONFIG	-DBSD=43
#	endif
#	define	LIBRT_TIMER	timerunix
#	define	RT_LIBES	-lmt
#	define	LGT_CONFIG	-Dcray
#	define	LIBPKG_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_X -I/usr/include/X11
#	define	LIBFB_OBJS	if_remote pkg if_X
#	define	LIBFB_SETUP	(rm -fr tmp; mkdir tmp; \
		cp /usr/lib/libX11.a PRODUCTS; \
		AR x /usr/lib/libnet.a; \
		rm -f select.o; \
		AR u ../PRODUCTS *; \
		cd ..; rm -fr tmp)
#	define	MGED_LIBES	/usr/lib/libX11.a /usr/lib/libnet.a
 */
#	define	MGED_LIBES	LIBFB
#endif

#ifdef convex
/*	libplot3/htond.c depends on running the Convex in native mode (-fn) */
#	undef	convex
#	define	UNIXTYPE	BSD
#	define	MTYPE	c1
#	define	BSD	42
#	define	HAS_TCP	1
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY
#	define	LIBFB_OBJS	if_remote pkg if_ptty
#	define	FC	/usr/convex/fc
/*	Optional vectorizing C compiler */
#	if 0
/*		Optional vectorizing C compiler */
#		define	CC_OPTS	-DVECTORIZE -fn
#			define	CC_OPTS	-DVECTORIZE -fn
#endif
#	endif
#endif
#ifdef ardent
/* This configuration information is based on a preliminary test */
#	define	UNIXTYPE	SYSV
#	undef	ard
#	define	MTYPE	ard
/*	The network code is not tested with BRL-CAD yet */
#	define	HAS_TCP	0
#	define	LIBRT_TIMER	timerunix
/*	Note that -O2 causes multiple compiler failures */
#	define	OPTIMIZER	-O1
/*	Note that a cc -43 option gives a workable BSD environment */
/*XXX	Note that this X11 configuration may need tweaking */
#	define	LIBFB_CONFIG	-DIF_X
#	define	LIBFB_OBJS	if_X
#	define	LIBFB_SETUP	cp /usr/lib/libX11.a PRODUCTS
#	define	MGED_OBJS	dm-X
#	define	MGED_CONFIG	-DDM_X
#	define	MGED_LIBES	/usr/lib/libX11.a
#endif
#ifdef stellar
/* This configuration information is based on a preliminary test */
#	define	UNIXTYPE	SYSV
#	undef	stl
#	define	MTYPE	stl
/*	The network code is not tested with BRL-CAD yet */
#	define	HAS_TCP	0
#	define	LIBRT_TIMER	timerunix
/*XXX	Note that this X11 configuration may need tweaking */
#	define	LIBFB_CONFIG	-DIF_X
#	define	LIBFB_OBJS	if_X
#	define	LIBFB_SETUP	cp /usr/lib/libX11.a PRODUCTS
#	define	MGED_OBJS	dm-X
#	define	MGED_CONFIG	-DDM_X
#	define	MGED_LIBES	/usr/lib/libX11.a
#endif
#ifdef eta10
/* This configuration information is based on a preliminary test */
#	define	UNIXTYPE	SYSV
#	undef	eta
#	define	MTYPE	eta
#	define	HAS_TCP	0
#	define	LIBRT_TIMER	timerunix
#ifdef pyramid

#ifdef pyr
#	define	UNIXTYPE	BSD
#	define	MTYPE	pyr
#	define	BSD	42
#	define	HAS_TCP	1
#	define	CC_DEFS	-Dvoid=int
#	define	LIBRT_TIMER	timer42
#endif

/*
 *  Prototype System V machine
 */
#	define	UNIXTYPE	SYSV
#ifdef RANDOM_SYSV
#	define	MTYPE	unknown_sysv
#	define	HAS_TCP	0
#	define	LIBRT_TIMER	timerunix
#endif

#	define	UNIXTYPE	SYSV
#ifdef VLD
/*	Not yet shaken out for use with Cake */
#	define	HAS_TCP	0
#	define	CC_DEFS	-DVLDSYSV
#	define	LIBRT_TIMER	timer52brl
#	define	CC	/usr/5bin/cc
#	define	RANLIB	ranlib
#	define	BINDIR	/vld/bin
#	define	INCLUDE_DIR	/vld/include
#	define	LIBDIR	/vld/lib
#	define	ETCDIR	/vld/etc
#	define	MANDIR	/usr/5lib/man/local/min
#endif

/****************************************************************
*								*
*  END System-specific definitions				*
*								*
*  Please do not modify anything below here without being	*
*  quite certain of what you are doing (or at least keeping	*
*  good backups!).						*
*								*
****************************************************************/

#if !defined(MTYPE)
#	include "It is necessary to define the machine type as MTYPE"
#if !defined(UNIXTYPE) || ( UNIXTYPE != BSD && UNIXTYPE != SYSV )
#	include "It is necessary to define UNIXTYPE as either _BSD or _SYSV"
#endif

#endif

#if !defined(HAS_TCP)
#	include "It is necessary to define HAS_TCP as either 0 or 1"
#endif

#if !defined(CC_DEFS)
#	define	CC_DEFS	/**/
#endif

#if !defined(CC_OPTS)
#	define	CC_OPTS	/**/
#endif

#if !defined(LD_OPTS)
#	define	LD_OPTS	/**/
#endif

/* Provide defaults here */
#if !defined(LIBFB_OBJS) || !defined(LIBFB_CONFIG)
#	if HAS_TCP == 0
#		define	LIBFB_OBJS	if_ptty
#		define	LIBFB_CONFIG	-DIF_PTTY
#	else
#		define	LIBFB_OBJS	if_remote pkg if_ptty
#		define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY
#	endif
/*	LIBFB_SETUP is only to be defined when needed */
/*	LIBSYSV_SETUP is only to be defined when needed */

#ifndef RT_CONFIG
#	define	RT_CONFIG	/**/
#endif

#ifndef RT_LIBES
#	define	RT_LIBES	/**/
#endif

#ifndef LGT_CONFIG
#	define	LGT_CONFIG	/**/
#endif

#ifndef RFBD_CONFIG
#	define	RFBD_CONFIG	/**/
#endif

#ifndef LIBPKG_CONFIG
#	define	LIBPKG_CONFIG	/**/
#endif

#ifndef MGED_CONFIG
#	define	MGED_CONFIG	/**/
#endif

#ifndef MGED_OBJS
#	define	MGED_OBJS	/**/
#endif

#ifndef MGED_LIBES
#	define	MGED_LIBES	/**/
#endif

/*
 *  Provide paths for programs, etc.
 *  Don't add comments after a definition, the extra tabs ruin things
 */
#ifndef	CC
#	define	CC	/bin/cc
#endif
#ifndef FC
#	define	FC	/usr/bin/f77
#endif
#	if	UNIXTYPE == BSD
#if	!defined(GETHOST)
#	ifdef BSD
#		define	GETHOST	hostname
#	else
#		define	GETHOST	uname -n
#	endif
#endif
#	if	UNIXTYPE == BSD
#if	!defined(RANLIB)
#	ifdef BSD
#		define	RANLIB	echo
/*		Can be defined in specific config as "echo" to no-op */
#		define	RANLIB	ranlib5.sh
#	endif
#endif

#if	!defined(BINDIR)
/*	Define places where users can find "installed" copies of things */
#	define	BINDIR	/usr/brlcad/bin
#	define	LIBDIR	/usr/brlcad/lib
#	define	ETCDIR	/usr/brlcad/etc
#	define	INCLUDE_DIR	/usr/include/brlcad
#endif

/* Permissions for "installed" files of various types */
#define	BINPERM	775
#define	LIBPERM	664
#define	MANPERM	664
#define	DIRPERM	775

#if	!defined(ARCH_SUF)
/*	Suffix for archives.  "a" on most UNIX machine, "o" on XMP */
#	define	ARCH_SUF	a
#endif

/*
 *  Places to find the working copies of the libraries
 *  If the binaries are to be separated from the sources,
 *  as is needed in a multi-machine NFS environment,
 *  For the purposes of Cray-2 LIB_PRE, there can only be ONE tab
 *  character between the symbol name and the definition.
/**
#if MTYPE == bench
#	undef	NFS
#endif
**/
/**GAK, no string compares in #if */

#	define	LIBFB	../libfb/libfb.ARCH_SUF
#	define	LIBRT	../librt/librt.ARCH_SUF
#	define	LIBPLOT	../libplot3/libplot3.ARCH_SUF
#	define	LIBORLE	../liborle/liborle.ARCH_SUF
#	define	LIBRLE	../librle/librle.ARCH_SUF
#	define	LIBWDB	../libwdb/libwdb.ARCH_SUF
#	define	LIBSPL	../libspl/libspl.ARCH_SUF
#	define	LIBWDB	../libwdb/libwdb.ARCH_SUF
#	define	LIBSPL	../libspl/libspl.ARCH_SUF
#	define	LIBFONT	../libfont/libfont.ARCH_SUF
#	define	LIBFONT	../libfont/libfont.ARCH_SUF
#	define	LIBSYSV	../libsysv/libsysv.ARCH_SUF
#	ifndef	LIBMALLOC
#		define	LIBMALLOC	../libmalloc/libmalloc.ARCH_SUF
#	endif
#	if HAS_TCP
#		define	LIBPKG	../libpkg/libpkg.ARCH_SUF
#	else
#		define	LIBPKG	/**/
#	if UNIXTYPE == BSD
#		define	LIBSYSV		../libsysv/libsysv.ARCH_SUF
#	else
#		define	LIBSYSV		/**/
#	endif
#	endif

#	define	LIBFB	../.libfb.MTYPE/libfb.ARCH_SUF
#	define	LIBRT	../.librt.MTYPE/librt.ARCH_SUF
#	define	LIBPLOT	../.libplot3.MTYPE/libplot3.ARCH_SUF
#	define	LIBORLE	../.liborle.MTYPE/liborle.ARCH_SUF
#	define	LIBRLE	../.librle.MTYPE/librle.ARCH_SUF
#	define	LIBWDB	../.libwdb.MTYPE/libwdb.ARCH_SUF
#	define	LIBSPL	../.libspl.MTYPE/libspl.ARCH_SUF
#	define	LIBWDB	../.libwdb.MTYPE/libwdb.ARCH_SUF
#	define	LIBSPL	../.libspl.MTYPE/libspl.ARCH_SUF
#	define	LIBFONT	../.libfont.MTYPE/libfont.ARCH_SUF
#	define	LIBFONT	../.libfont.MTYPE/libfont.ARCH_SUF
#	define	LIBSYSV	../.libsysv.MTYPE/libsysv.ARCH_SUF
#	ifndef	LIBMALLOC
#		define	LIBMALLOC	../.libmalloc.MTYPE/libmalloc.ARCH_SUF
#	endif
#	if HAS_TCP
#		define	LIBPKG	../.libpkg.MTYPE/libpkg.ARCH_SUF
#	else

#	if UNIXTYPE == BSD
#		define	LIBSYSV		../.libsysv.MTYPE/libsysv.ARCH_SUF
#	else
#		define	LIBSYSV		/**/
#	endif
#		define	LIBPKG	/**/
#	endif
#endif

#if !defined(LIBTERMLIB)
#	define	LIBTERMLIB	-ltermlib
#endif
#	if UNIXTYPE == BSD
#if !defined(MANDIR)
#	ifdef BSD
#		define	MANDIR	/usr/man/man
#	else
#		define	MANDIR	/usr/man/u_man/man
#	endif
#endif

/*****/

/* Directory within CAD tree for header files */
#define INCDIR	../h

/* These should go after main Cakefile */
#if !defined(OPTIMIZER)
#	define	OPTIMIZER	-O
#endif
#if !defined(PROFILER)
#	define	PROFILER	/**/
#endif
#if !defined(CONFIGDEFS)
#	define	CONFIGDEFS	/**/
#endif
#if UNIXTYPE == BSD
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DBSD CC_DEFS CONFIGDEFS
#ifdef BSD
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DBSD=BSD CC_DEFS CONFIGDEFS
#else
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DSYSV CC_DEFS CONFIGDEFS
#endif

/* Loader flags.  Note that CC is used to do the loading */
#define	LDFLAGS	OPTIMIZER LD_OPTS CONFIGDEFS
#define FFLAGS	OPTIMIZER
/* FORTRAN flags */
#define FFLAGS	OPTIMIZER FC_OPTS

#if UNIXTYPE == BSD
#	define	LFLAGS	-abchx -DBSD CC_DEFS CONFIGDEFS
#ifdef BSD
#	define	LFLAGS	-abchx -DBSD=BSD CC_DEFS CONFIGDEFS
#else
#	define	LFLAGS	-DSYSV CC_DEFS CONFIGDEFS
#endif

/* Archiver */
#if !defined(AR)
#	define	AR	ar
/* CC and LINT libraries.  Everybody gets math library by default */
#define LIBES	LIBSYSV -lm
#define LLIBES	-lm
#define LIBES	LIB_PRE''LIBSYSV STANDARD_LIBES
#define LLIBES	STANDARD_LIBES

/* Program to install executables */
#define	INS	cp

/* Command strings to typeset manual pages.
 *  Usage is:   TYPESET_MAN0 TYPESET_MAN1 *.MANSECTION TYPESET_MAN2
 *  First version is 300dpi Imagen, then old Imagen, then plain troff
 */
#define	TYPESET_MAN0	tbl
#define	TYPESET_MAN1	/usr/lib/tmac/tmac.an
#define	TYPESET_MAN2	/usr/5lib/troff -Ti300 | /usr/5bin/dimp -t | \
			    qpr -q im231
#ifdef never
#define	TYPESET_MAN2	| /usr/5lib/troff -Ti10 | /usr/5bin/di10 -t | \
			    qpr -q im328-raw
#endif
#ifdef never
#define	TYPESET_MAN0	troff -man
#define	TYPESET_MAN1	/**/
#define	TYPESET_MAN2	/**/
#endif

/*
 *  Definition of master source machine, and master distribution
 *  directory.  Please don't change these values.		
 *  When the current host is == MASTERHOST, the "make install"	
 *  rules will also handle the distribution source management.	
 *  Even if you have lots of disk space, you don't want that	
 *  to happen.							
 */
#define	MASTERHOST	spark.brl.mil
#define	DISTRIBUTION	/m/dist

/* Symbols that should be defined in individual Cakefiles */
#undef	SHFILES ??
/* PRODUCTS */
/* MANSECTION */
/* CONFIGDEFS */
/* SRCDIR */
/* AFTERINSTALL */

/* Cake-related definitions */
#define BASE_FILES	[[echo FILES|tr " " '\\\\012'|sed -e 's,.*''/,,']]
#define	SRC	[[SUB X X''SRCSUFF FILES]]
#define	OBJ	[[SUB X X''OBJSUFF BASE_FILES]]
#define	OBJSUFF .o
#define	HDR_DEP	[[cakeinclude.sh ../SRCDIR/%.c INCDIR ../SRCDIR]]
