/*
 *			C A K E F I L E . R U L E S
 */

/* Format sources for printing on stdout */
print&:	Cakefile.print \
	[[SUB X X.print ../SRCDIR/''*.[h''MANSECTION] ]] \
	[[SUB X X.nroff ../SRCDIR/''*.MANSECTION ]] \
	[[SUB X ../SRCDIR/X''SRCSUFF.print FILES]]

%.print&:
	@pr %

%.nroff&:
	@nroff -Tlp -man %

/*
 *  Typeset all the non-stub manual pages.  Do them all at once,
 *  to prevent lots of extra header sheets on the printer
 */
typeset&:  troff.out
	echo "( TYPESET_MAN2 ) < troff.out"
	@rm -f troff.out

troff.out&:  [[SUB X X.troff ../SRCDIR/''*.MANSECTION ]]

%.troff&:
	echo "TYPESET_MAN1 % >> troff.out"

#define SRC_LIST	`SUB X ../SRCDIR/X''SRCSUFF FILES`

lint&:
	LINT LFLAGS -I''INCDIR SRC_LIST LLIBES > SRCDIR.lint

tags:	[[echo SRC_LIST]]
	ctags SRC_LIST

flow&:	[[echo SRC_LIST]]
	cflow -I''INCDIR SRC_LIST > SRCDIR.flow

xref&:	[[echo SRC_LIST]]
	cxref -c -s -w132 -I''INCDIR SRC_LIST > SRCDIR.xref

compare&: [[SUB X X.compare PRODUCTS]]

%.compare&:	%
	cmp BINDIR/% %

/*
 *  Patterns to handle the installation and uninstallation
 *  of products, manuals, and manual stubs.
 *  This is complicated by the fact that not all directories
 *  will contain all three types of items.
 */
#define	MAN_EXISTS	{{ls ../SRCDIR|egrep -s .MANSECTION'$'}}
#define STUB_EXISTS	{{ls ../SRCDIR|egrep -s .MANSECTION.stub'$'}}

uninstall&:  uninstall-prod uninstall-man uninstall-stub

#ifdef PRODUCTS
uninstall-prod&: [[SUB X X.uninstall-prod PRODUCTS]]
#else
uninstall-prod&:
#endif

%.uninstall-prod&:
	rm -f BINDIR/% BINDIR/%.bak

uninstall-man&:	do-uninstall-man	if MAN_EXISTS
uninstall-man&:				if not MAN_EXISTS

do-uninstall-man&:  [[SUB ../SRCDIR/X X.uninstall-man ../SRCDIR/''*.MANSECTION]]

%.uninstall-man&:
	rm -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak

uninstall-stub&:  do-uninstall-stub	if STUB_EXISTS
uninstall-stub&:			if not STUB_EXISTS

do-uninstall-stub&:  [[SUB ../SRCDIR/X.stub X.uninstall-stub ../SRCDIR/''*.stub]]

%.uninstall-stub&:
	rm -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak

/* XXX Something needs to be done about checking for the master machine!! */ 

install&: install-prod install-man install-stub

#ifdef PRODUCTS
install-prod&: [[SUB X X.install-prod PRODUCTS]]
#else
install-prod&:
#endif

/* Here is where we depend on having /bin/sh as the shell */
%.install-prod&: %
	@if cmp -s BINDIR/% %; \
	then	exit 0; fi; \
	mv -f BINDIR/% BINDIR/%.bak 2>/dev/null; \
	if INS % BINDIR/%; \
	then	if test x''AFTERINSTALL != x'AFTERINSTALL'; \
		then	AFTERINSTALL BINDIR/%; fi; \
		echo "++++++INSTALLED" BINDIR/%; \
		chmod BINPERM BINDIR/%; \
	fi

install-man&:  do-install-man	if MAN_EXISTS
install-man&:			if not MAN_EXISTS

do-install-man&: [[SUB ../SRCDIR/X X.install-man ../SRCDIR/''*.MANSECTION ]]

%.install-man&:	../SRCDIR/%
	@if cmp -s MANDIR''MANSECTION/% ../SRCDIR/%; \
	then	exit 0; fi; \
	mv -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak 2>/dev/null; \
	if INS ../SRCDIR/% MANDIR''MANSECTION/%; \
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/%; \
		chmod MANPERM MANDIR''MANSECTION/%; \
	fi

install-stub&:  do-install-stub	if STUB_EXISTS
install-stub&:			if not STUB_EXISTS

do-install-stub&: [[SUB ../SRCDIR/X.stub X.install-stub ../SRCDIR/''*.stub]]

%.install-stub&:  ../SRCDIR/%.stub
	@if cmp -s MANDIR''MANSECTION/% ../SRCDIR/%.stub; \
	then	exit 0; fi; \
	mv -f MANDIR''MANSECTION/% MANDIR''MANSECTION/%.bak 2>/dev/null; \
	if INS ../SRCDIR/%.stub MANDIR''MANSECTION/%; \
	then	echo "++++++INSTALLED" MANDIR''MANSECTION/%; \
		chmod MANPERM MANDIR''MANSECTION/%; \
	fi

/*
 *  Force installation of copies of all sources,
 *  whether configured in or not, into the distribution tree.
 */
inst-dist&:
	-rm -fr DISTRIBUTION/SRCDIR/''*
	-INS ./Cakefile *.[hcfs] SHFILES *.MANSECTION *.MANSECTION.stub *.doc DISTRIBUTION/SRCDIR/.

/*
 *	clean	remove all .o files and by-products
 *	noprod	remove the final executables
 *	clobber	perform clean & noprod
 */
clobber&:	clean noprod

clean&:
	-rm -f core *~ *.o SRCDIR.out SRCDIR.err SRCDIR.xref SRCDIR.flow SRCDIR.lint

noprod&:
	-rm -f PRODUCTS

#ifdef never
/*
 *  Insist that, by default, Cake work on making the products.
 *  THIS SHOULD BE THE LAST THING CAKE SEES!
 *  The double-colon marks this as the main target.
 */
"!MAINCAKE!"&::	PRODUCTS
#endif
